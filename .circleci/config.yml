# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

jobs:
  "php80-mysql80":
    docker:
      - image: aimeos/ci-php:8.0
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: aimeos
          MYSQL_USER: aimeos
          MYSQL_PASSWORD: aimeos
    steps:
      - checkout
      - run: git clone --depth=50 --branch=2023.10 https://github.com/aimeos/aimeos-core ../aimeos-core
      - run: cd .. && mv project aimeos-core/ext/ai-admin-jqadm && mv aimeos-core project && cd project
      - restore_cache:
          keys:
            - php80-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php80-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: echo "<?php return array( 'db' => array( 'adapter' => 'mysql', 'host' => '127.0.0.1', 'port' => 3306, 'database' => 'aimeos', 'username' => 'aimeos', 'password' => 'aimeos', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array( \"SET SESSIOn sort_buffer_size=2097144; SET NAMES 'utf8'; SET SESSION sql_mode='ANSI'\" ) ), 'fs' => array( 'adapter' => 'Standard', 'basedir' => '.' ), 'mq' => array( 'adapter' => 'Standard', 'db' => 'db' ) );" > config/resource.php
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 3306 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: ./vendor/bin/phing -Ddir=ext/ai-admin-jqadm setup testext

  "php81-mysql80":
    docker:
      - image: aimeos/ci-php:8.1
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: aimeos
          MYSQL_USER: aimeos
          MYSQL_PASSWORD: aimeos
    steps:
      - checkout
      - run: git clone --depth=50 --branch=2023.10 https://github.com/aimeos/aimeos-core ../aimeos-core
      - run: cd .. && mv project aimeos-core/ext/ai-admin-jqadm && mv aimeos-core project && cd project
      - restore_cache:
          keys:
            - php81-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php81-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: echo "<?php return array( 'db' => array( 'adapter' => 'mysql', 'host' => '127.0.0.1', 'port' => 3306, 'database' => 'aimeos', 'username' => 'aimeos', 'password' => 'aimeos', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array( \"SET SESSIOn sort_buffer_size=2097144; SET NAMES 'utf8'; SET SESSION sql_mode='ANSI'\" ) ), 'fs' => array( 'adapter' => 'Standard', 'basedir' => '.' ), 'mq' => array( 'adapter' => 'Standard', 'db' => 'db' ) );" > config/resource.php
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 3306 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: ./vendor/bin/phing -Ddir=ext/ai-admin-jqadm setup testext

  "php82-mysql80":
    docker:
      - image: aimeos/ci-php:8.2
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: aimeos
          MYSQL_USER: aimeos
          MYSQL_PASSWORD: aimeos
    steps:
      - checkout
      - run: git clone --depth=50 --branch=2023.10 https://github.com/aimeos/aimeos-core ../aimeos-core
      - run: cd .. && mv project aimeos-core/ext/ai-admin-jqadm && mv aimeos-core project && cd project
      - restore_cache:
          keys:
            - php2-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php82-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: echo "<?php return array( 'db' => array( 'adapter' => 'mysql', 'host' => '127.0.0.1', 'port' => 3306, 'database' => 'aimeos', 'username' => 'aimeos', 'password' => 'aimeos', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array( \"SET SESSIOn sort_buffer_size=2097144; SET NAMES 'utf8'; SET SESSION sql_mode='ANSI'\" ) ), 'fs' => array( 'adapter' => 'Standard', 'basedir' => '.' ), 'mq' => array( 'adapter' => 'Standard', 'db' => 'db' ) );" > config/resource.php
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 3306 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: ./vendor/bin/phing -Ddir=ext/ai-admin-jqadm setup coverageext
      - run: ./vendor/bin/php-coveralls --root_dir ext/ai-admin-jqadm -o tests/coveralls.json -vvv -x tests/coverage.xml

workflows:
  version: 2
  unittest:
    jobs:
      - "php80-mysql80"
      - "php81-mysql80"
      - "php82-mysql80"
